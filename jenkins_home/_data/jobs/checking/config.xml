<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1207.ve6191ff089f8">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2114.v2654ca_721309"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2114.v2654ca_721309">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.34.5">
      <projectUrl>https://github.com/anilkumle1/jenkins.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2759.v87459c4eea_ca_">
    <script>pipeline{
    agent any
    stages{
        stage(&apos;git clone&apos;){
            steps{
                checkout([$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/master&apos;]], extensions: [], userRemoteConfigs: [[credentialsId: &apos;github&apos;, url: &apos;https://github.com/anilkumle1/jenkins.git&apos;]]])
            }
        }
        stage(&apos;build docker image&apos;){
            steps{
                script{
                    sh &quot;docker build -t anilkumle/sample-testing:jenkinscheck .&quot;
                }
            }
        }
        stage(&apos;push docker images&apos;){
            steps{
                script{
                    withCredentials([string(credentialsId: &apos;dockerhub-pwd&apos;, variable: &apos;dockerhubpasswd&apos;)]) {
                    sh &quot;docker login -u anilkumle -p ${dockerpasswd}&quot;
}
                    sh &quot;docker push anilkumle/sample-testing:jenkinscheck&quot;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>